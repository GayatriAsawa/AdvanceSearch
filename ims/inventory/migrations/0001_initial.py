# Generated by Django 3.2.8 on 2021-12-30 05:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import inventory.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Allocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.CharField(max_length=100)),
                ('allot_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CPUTYPE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iepl_id', models.CharField(max_length=100, unique=True, verbose_name='iepl_id')),
                ('description', models.CharField(blank=True, max_length=512)),
                ('po_srno', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)])),
                ('allocation_status', models.CharField(blank=True, choices=[('Allocated', 'Allocated'), ('Decommissioned', 'Decommissioned'), ('Free', 'Free'), ('Needs Maintainence', 'Needs Maintainence')], max_length=20, null=True)),
                ('floor_number', models.CharField(blank=True, max_length=2, null=True)),
                ('loc_type', models.CharField(blank=True, max_length=1, null=True)),
                ('loc_number', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)])),
                ('location', models.CharField(blank=True, max_length=64, null=True)),
                ('comment', models.CharField(blank=True, default='NA', max_length=512, null=True, validators=[inventory.models.project_status_validator])),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('gin_srno', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)])),
                ('gin_iqar_no', models.CharField(blank=True, max_length=64, null=True)),
                ('to_be_reimbursed', models.BooleanField(blank=True, default=False, null=True)),
                ('modified_on', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('service_tag', models.CharField(blank=True, max_length=64, null=True, validators=[inventory.models.service_tag_validator])),
                ('host_name', models.CharField(blank=True, default='NA', max_length=64, null=True)),
                ('local_admin', models.CharField(blank=True, max_length=64, null=True)),
                ('rent', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('cpu_speed', models.FloatField(blank=True, max_length=100, null=True, validators=[inventory.models.validate_decimals_cpu_speed])),
                ('display_output', models.CharField(blank=True, max_length=64, null=True, validators=[inventory.models.Disp])),
                ('monitor_manufacturer', models.CharField(blank=True, max_length=64, null=True)),
                ('monitor_make', models.CharField(blank=True, max_length=64, null=True)),
                ('monitor_size', models.FloatField(blank=True, null=True, validators=[inventory.models.validate_decimals_monitor_size])),
                ('storage', models.CharField(blank=True, max_length=64, null=True, validators=[inventory.models.storage])),
                ('warranty_expiry_date', models.DateField(blank=True, default='2012-09-04', null=True)),
                ('customer_property', models.BooleanField(blank=True, default=False, null=True)),
                ('po_date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('model_no', models.CharField(blank=True, max_length=150, null=True)),
                ('desk_no', models.CharField(blank=True, max_length=50, null=True)),
                ('asset_code', models.CharField(blank=True, default='NA', max_length=100, null=True)),
                ('cpu', models.FloatField(blank=True, default=0, max_length=100, null=True)),
                ('monitor_model', models.CharField(blank=True, default='NA', max_length=100, null=True)),
                ('hdd', models.CharField(blank=True, default='NA', max_length=100, null=True)),
                ('extra_monitor_model', models.CharField(blank=True, default='NA', max_length=50, null=True)),
                ('cpu_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.cputype')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_by', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['iepl_id'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Employee',
            },
        ),
        migrations.CreateModel(
            name='Item_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, validators=[inventory.models.item_type_validator])),
            ],
        ),
        migrations.CreateModel(
            name='ItemName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=64, validators=[inventory.models.item_name_validator])),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(default='1F-Q0', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, validators=[inventory.models.project_status_validator])),
            ],
        ),
        migrations.CreateModel(
            name='ManufacturerPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, validators=[inventory.models.project_status_validator])),
            ],
        ),
        migrations.CreateModel(
            name='OSS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='poIni',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='poNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_year', models.CharField(blank=True, max_length=5)),
                ('po_initials', models.CharField(blank=True, max_length=2)),
                ('po_srno', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)])),
            ],
        ),
        migrations.CreateModel(
            name='poYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='RAMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='SubsidiaryMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('address', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Subsidiary',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_action', models.CharField(choices=[('Release', 'Release'), ('Borrow', 'Borrow')], max_length=50)),
                ('service_status', models.CharField(choices=[('Initiated', 'Initiated'), ('Completed', 'Completed')], default='Initiated', max_length=50)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.employeemaster')),
                ('service_tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.device')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_action', models.CharField(choices=[('transfer', 'transfer'), ('incorrect', 'incorrect'), ('return_to_store', 'return_to_store'), ('free_item', 'free_item')], max_length=20)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('allocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.allocation')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.employeemaster')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('project_id', models.PositiveIntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(99999999), django.core.validators.MinValueValidator(1)])),
                ('project_status', models.CharField(choices=[('Active', 'Active'), ('On_hold', 'On_hold'), ('Suspended', 'Suspended'), ('Completed', 'Completed')], default='Active', max_length=64)),
                ('subsidiary1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.subsidiarymaster')),
            ],
            options={
                'verbose_name_plural': 'Project',
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False)),
                ('status', models.CharField(choices=[('Free', 'Free'), ('Allocated', 'Allocated'), ('Decommissioned', 'Decomissioned'), ('Edited', 'Edited'), ('Added', 'Added'), ('Deleted', 'Deleted'), ('Transferred', 'Transferred'), ('Returned To Store', 'Returned To Store')], db_index=True, max_length=20, null=True)),
                ('allot_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allot_to_user', to=settings.AUTH_USER_MODEL)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.device')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='History_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(default='--', max_length=50)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.employeemaster')),
                ('service_tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.device')),
            ],
        ),
        migrations.AddField(
            model_name='device',
            name='gin_initials',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gin_initials', to='inventory.poini'),
        ),
        migrations.AddField(
            model_name='device',
            name='gin_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gin_year', to='inventory.poyear'),
        ),
        migrations.AddField(
            model_name='device',
            name='item_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.itemname'),
        ),
        migrations.AddField(
            model_name='device',
            name='item_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.item_type'),
        ),
        migrations.AddField(
            model_name='device',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.manufacturer'),
        ),
        migrations.AddField(
            model_name='device',
            name='manufacturer_part_no',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.manufacturerpart'),
        ),
        migrations.AddField(
            model_name='device',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='device',
            name='os',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.oss'),
        ),
        migrations.AddField(
            model_name='device',
            name='po_initials',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='po_initials', to='inventory.poini'),
        ),
        migrations.AddField(
            model_name='device',
            name='po_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='po_year', to='inventory.poyear'),
        ),
        migrations.AddField(
            model_name='device',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.projectmaster'),
        ),
        migrations.AddField(
            model_name='device',
            name='ram',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.rams'),
        ),
        migrations.AddField(
            model_name='device',
            name='subsidiary',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.subsidiarymaster'),
        ),
        migrations.CreateModel(
            name='DecomissionedItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iepl_id', models.CharField(max_length=10, unique=True, verbose_name='iepl_id')),
                ('service_tag', models.CharField(blank=True, max_length=100, null=True)),
                ('host_name', models.CharField(blank=True, default='NA', max_length=100, null=True)),
                ('po_number', models.CharField(blank=True, max_length=150, null=True)),
                ('po_date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('model_no', models.CharField(blank=True, max_length=150, null=True)),
                ('desk_no', models.CharField(blank=True, max_length=50, null=True)),
                ('asset_code', models.CharField(blank=True, default='NA', max_length=100, null=True)),
                ('cpu', models.CharField(blank=True, default='NA', max_length=100, null=True)),
                ('cpu_speed', models.FloatField(blank=True, max_length=100, null=True)),
                ('monitor_model', models.CharField(blank=True, default='NA', max_length=100, null=True)),
                ('os', models.CharField(blank=True, default='NA', max_length=100, null=True)),
                ('ram', models.CharField(blank=True, default='NA', max_length=100, null=True)),
                ('hdd', models.CharField(blank=True, default='NA', max_length=100, null=True)),
                ('extra_monitor_model', models.CharField(blank=True, default='NA', max_length=50, null=True)),
                ('status', models.BooleanField(db_index=True, default=False)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('item_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.item_type')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.location')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.manufacturer')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.projectmaster')),
            ],
        ),
        migrations.AddField(
            model_name='allocation',
            name='service_tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.device'),
        ),
    ]
